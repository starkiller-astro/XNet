##
## Instructions and compiler/library flags for features under development
##

#-------------------------------------------------------------------------------
# Additional library definitions and compile/link flags
#-------------------------------------------------------------------------------

## CUDA Runtime
ifeq (,$(filter $(MACHINE),$(CRAY_MACHINE)))
    CUDA_DIR ?= /usr/local/cuda
else
    ifdef CUDATOOLKIT_HOME
        CUDA_DIR ?= $(CUDATOOLKIT_HOME)
    else ifdef CRAY_CUDATOOLKIT_DIR
        CUDA_DIR ?= $(CRAY_CUDATOOLKIT_DIR)
    else
        CUDA_DIR ?= /opt/nvidia/cudatoolkit/default
    endif
endif
CUDA_INC    = -I$(CUDA_DIR)/include
CUDA_LIBDIR = -L$(CUDA_DIR)/lib64
CUDA_LIBS   = -lcudart -lcuda
CUDA_SRC    = cudaf.f90
CUDA_OBJ    = $(addsuffix .o,$(basename $(CUDA_SRC)))

## cuBLAS
CUBLAS_INC    = $(CUDA_INC)
CUBLAS_LIBDIR = $(CUDA_LIBDIR)
CUBLAS_LIBS   = -lcublas $(CUDA_LIBS)
CUBLAS_SRC    = cublasf.f90 $(CUDA_SRC)
CUBLAS_OBJ    = $(addsuffix .o,$(basename $(CUBLAS_SRC)))

## MAGMA
MAGMA_DIR   ?= $(HOME)/magma-2.4.0
MAGMA_INC    = -I$(MAGMA_DIR)/include $(CUBLAS_INC)
MAGMA_LIBDIR = -L$(MAGMA_DIR)/lib $(CUBLAS_LIBDIR)
MAGMA_LIBS   = -lmagma $(CUBLAS_LIBS)
MAGMA_SRC    = magmaf.f90 $(CUBLAS_SRC)
MAGMA_OBJ    = $(addsuffix .o,$(basename $(MAGMA_SRC)))

## Performance Application Programming Interface (PAPI)
PAPI_DIR   ?= /opt/cray/papi/default
PAPI_INC    = -I$(PAPI_DIR)/include
PAPI_LIBDIR = -L$(PAPI_DIR)/lib
PAPI_LIBS   = -lpapi

GPU_LAPACK_INC    = $($(GPU_LAPACK_VER)_INC)
GPU_LAPACK_LIBDIR = $($(GPU_LAPACK_VER)_LIBDIR)
GPU_LAPACK_LIBS   = $($(GPU_LAPACK_VER)_LIBS)
GPU_LAPACK_SRC    = $($(GPU_LAPACK_VER)_SRC)
GPU_LAPACK_OBJ    = $(addsuffix .o,$(basename $(GPU_LAPACK_SRC)))

GPU_LAPACK_OBJ_F90 = $(addsuffix .o,$(basename $(filter %.f90 %.F90,$(GPU_LAPACK_SRC))))
GPU_LAPACK_OBJ_F   = $(addsuffix .o,$(basename $(filter %.f %.F,$(GPU_LAPACK_SRC))))
GPU_LAPACK_OBJ_C   = $(addsuffix .o,$(basename $(filter %.c,$(GPU_LAPACK_SRC))))
GPU_LAPACK_OBJ_CPP = $(addsuffix .o,$(basename $(filter %.cpp,$(GPU_LAPACK_SRC))))
GPU_LAPACK_OBJ_CU  = $(addsuffix .o,$(basename $(filter %.cu,$(GPU_LAPACK_SRC))))

#-------------------------------------------------------------------------------
# Additional compiler definitions and flags
#-------------------------------------------------------------------------------

## Definitions and flags for compiling CUDA source code
NVCC      = nvcc
NVCCFLAGS = -O3 -m64

ifneq ($(findstring Tesla, $(GPU_TARGET)),)
    GPU_TARGET += sm10 sm13
endif
ifneq ($(findstring Fermi, $(GPU_TARGET)),)
    GPU_TARGET += sm20
endif
ifneq ($(findstring Kepler, $(GPU_TARGET)),)
    GPU_TARGET += sm30 sm35
endif
ifneq ($(findstring Maxwell, $(GPU_TARGET)),)
    GPU_TARGET += sm50
endif
ifneq ($(findstring Pascal, $(GPU_TARGET)),)
    GPU_TARGET += sm60
endif
ifneq ($(findstring Volta, $(GPU_TARGET)),)
    GPU_TARGET += sm70
endif

ifneq ($(findstring sm10, $(GPU_TARGET)),)
    NVCCFLAGS += -gencode arch=compute_10,code=sm_10
endif
ifneq ($(findstring sm13, $(GPU_TARGET)),)
    NVCCFLAGS += -gencode arch=compute_13,code=sm_13
endif
ifneq ($(findstring sm20, $(GPU_TARGET)),)
    NVCCFLAGS += -gencode arch=compute_20,code=sm_20
endif
ifneq ($(findstring sm30, $(GPU_TARGET)),)
    NVCCFLAGS += -gencode arch=compute_30,code=sm_30
endif
ifneq ($(findstring sm35, $(GPU_TARGET)),)
    NVCCFLAGS += -gencode arch=compute_35,code=sm_35
endif
ifneq ($(findstring sm50, $(GPU_TARGET)),)
    NVCCFLAGS += -gencode arch=compute_50,code=sm_50
endif
ifneq ($(findstring sm60, $(GPU_TARGET)),)
    NVCCFLAGS += -gencode arch=compute_60,code=sm_60
endif
ifneq ($(findstring sm70, $(GPU_TARGET)),)
    NVCCFLAGS += -gencode arch=compute_70,code=sm_70
endif

## Flags for compiling with OpenACC
ifeq ($(GPU_MODE),ON)
    FLAGS += $(OPENACC)
endif

## Flags for using a GPU solver package
ifeq ($(MATRIX_SOLVER),gpu)
  LAPACK_INC    += $(GPU_LAPACK_INC)
  LAPACK_LIBDIR += $(GPU_LAPACK_LIBDIR)
  LAPACK_LIBS   += $(GPU_LAPACK_LIBS)
  LAPACK_SRC    += $(GPU_LAPACK_SRC)
  LAPACK_OBJ    += $(GPU_LAPACK_OBJ)
  BASE          += xnet_gpu.o
endif

#-------------------------------------------------------------------------------
# Additional Makefile targets/rules/dependencies
#-------------------------------------------------------------------------------

xnet_magma: $(BASE) jacobian_magma.o $(MAGMA_OBJ) $(LAPACK_OBJ) $(DRIVER)
	$(LDR) $(LDFLAGS) -o xnet_magma$(MPI_SFX) \
	    $(BASE) jacobian_gpu.o $(notdir $(MAGMA_OBJ) $(LAPACK_OBJ)) $(DRIVER) \
	    $(MAGMA_LIBDIR) $(MAGMA_LIBS) $(LAPACK_LIBDIR) $(LAPACK_LIBS)

xnet_gpu: $(BASE) jacobian_gpu.o $(CUBLAS_OBJ) $(LAPACK_OBJ) $(DRIVER)
	$(LDR) $(LDFLAGS) -o xnet_gpu$(MPI_SFX) \
	    $(BASE) jacobian_gpu.o $(notdir $(CUBLAS_OBJ) $(LAPACK_OBJ)) $(DRIVER) \
	    $(CUBLAS_LIBDIR) $(CUBLAS_LIBS) $(LAPACK_LIBDIR) $(LAPACK_LIBS)

$(GPU_LAPACK_OBJ_F90): %.o: %.f90
	$(FC) $(FFLAGS) $(F90FLAGS) $(GPU_LAPACK_INC) -c $< -o $(notdir $@)
$(GPU_LAPACK_OBJ_F): %.o: %.f
	$(FC) $(FFLAGS) $(F77FLAGS) $(GPU_LAPACK_INC) -c $< -o $(notdir $@)
$(GPU_LAPACK_OBJ_C): %.o: %.c
	$(CC) $(CFLAGS) $(GPU_LAPACK_INC) -c $< -o $(notdir $@)
$(GPU_LAPACK_OBJ_CPP): %.o: %.cpp
	$(CXX) $(CXXFLAGS) $(GPU_LAPACK_INC) -c $< -o $(notdir $@)
$(GPU_LAPACK_OBJ_CU): %.o: %.cu
	$(NVCC) $(NVCCLAGS) $(CUDA_INC) $(GPU_LAPACK_INC) -c $< -o $(notdir $@)

%.o: %.cu
	$(NVCC) $(NVCCFLAGS) $(CUDA_INC) -c $< -o $@

## Dependencies
magmaf.o: cudaf.o
cublasf.o: cudaf.o
cudaf.o: cudaf.f90
cudaf.f90: cudaDeviceProp.fh
cudaDeviceProp.fh: $(CUDA_DIR)/include/driver_types.h
	@sed -n '/struct.*cudaDeviceProp/,/}/ p' $(CUDA_DIR)/include/driver_types.h | \
		sed -e '1 d' \
		    -e 's/^{$\/type, bind(c) :: cudaDeviceProp/' \
		    -e 's/^\s*\<char\>\s*/  character(c_char) :: /' \
		    -e 's/^\s*\<size_t\>\s*/  integer(c_size_t) :: /' \
		    -e 's/^\s*\<int\>\s*/  integer(c_int)    :: /' \
		    -e 's/\[\([0-9]\+\)\]/(\1)/' \
		    -e 's/;\(\s*\)\/\*\(.*\)\*\// \1!\2/' \
		    -e 's/;.*$\//' \
		    -e 's/^}$\/end type cudaDeviceProp/' > $@
